@page
@model UserManagmentRazor.Areas.Configuration.Pages.PasswordExpirationModel
@{
    ViewData["Title"] = "Password Expiration Period";
}
<!-- Breadcrumb partial -->
@await Html.PartialAsync("_Breadcrumb", Model.Breadcrumbs)

@await Html.PartialAsync("_MessageAlert")

<h2>Password Expiration Period Configuration</h2>

<form method="post" class="form-horizontal">

    <!-- Activation Toggle Button (Bootstrap Switch) -->
    <div class="form-group mb-4">
        <label class="form-label">Activate Password Expiration Period:</label>
        <div class="form-switch">
            <input class="form-check-input" type="checkbox" asp-for="IsActivated" id="isActivatedToggle" role="switch"
                onchange="toggleConfigurationFields()">
            <label class="form-check-label" for="isActivatedToggle"></label>
        </div>
    </div>

    <!-- Configuration fields: Password expiration period -->
    <div id="configFields" style="display: none;">
        <!-- Password Expiration Period -->
        <div class="form-group mb-3">
            <label for="passwordExpirationPeriod" class="form-label">Password Expiration Period (Months)</label>
            <input type="number" class="form-control" asp-for="PasswordExpirationPeriod" id="passwordExpirationPeriod"
                min="1" required placeholder="Enter password expiration period in months (e.g. 6)">
            <span asp-validation-for="PasswordExpirationPeriod" class="text-danger"></span>
        </div>
    </div>

    <!-- Save Button -->
    <div class="mt-4">
        <button type="submit" class="btn btn-primary w-100">Save Configuration</button>
    </div>

</form>

<!-- JavaScript to toggle configuration fields -->
<script type="text/javascript">
    function toggleConfigurationFields() {
        const toggle = document.getElementById('isActivatedToggle');
        const configFields = document.getElementById('configFields');
        const passExpre = document.getElementById('passwordExpirationPeriod');


        if (toggle.checked) {
            configFields.style.display = 'block';
            // Set min values for the fields when toggle is on
            passExpre.setAttribute('min', '1');
        } else {
            configFields.style.display = 'none';
            // Remove the min attribute or reset it to 0 when toggle is off
            passExpre.setAttribute('min', '0');
            passExpre.removeAttribute('required');
        }
    }

    // Initialize the visibility of the configuration fields based on the current toggle value
    window.onload = function () {
        toggleConfigurationFields();
    };
</script>
