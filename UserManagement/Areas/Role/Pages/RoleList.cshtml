@page
@using UserManagmentRazor.Helpers
@using UserManagmentRazor.Helpers.DTo.LookUps
@using UserManagmentRazor.Helpers.Enums
@model UserManagmentRazor.Areas.Role.Pages.RoleListModel
@{
    ViewData["Title"] = "Role List";
    var actions = ViewData["AllowedActions"] as List<Actions>;
}

<!-- Breadcrumb partial -->
@await Html.PartialAsync("_Breadcrumb", Model.Breadcrumbs)

@await Html.PartialAsync("_MessageAlert")

<h1>Role List</h1>

<!-- Search Form with Bootstrap Input Group -->
<form method="get">
    <div class="input-group mb-4">
        <!-- Search Input Field -->
        <input type="text" id="searchRoleName" name="SearchRoleName" class="form-control"
            placeholder="Search by role name..." list="roleNames" value="@Model.SearchRoleName" />

        <!-- Search Button -->
        <button class="btn btn-primary" type="submit">
            <i class="bi bi-search"></i> Search
        </button>
    </div>

    <div class="d-flex gap-2">

        <a asp-page-handler="Export" asp-route-SearchRoleName="@Model.SearchRoleName"
            asp-route-PageNumber="@Model.Roles.PageNumber" asp-route-PageSize="@Model.Roles.PageSize"
            style="display:@Html.Raw(actions?.Any(a => a.ActionType == ActionType.Export) == true ? "inline" : "none");"
            class="btn btn-success">
            Export to Excel
        </a>
        <a asp-page="Create" class="btn btn-primary" style="display:@Html.Raw(actions?.Any(a => a.ActionType == ActionType.Create) == true ? "inline" : "none");">Create New Role</a>

    </div>
</form>

@if (Model.Roles.roles == null)
{
    <p>No roles found.</p>
}
else
{
    <datalist id="roleNames">
        @foreach (var role in Model.Roles.roles)
        {
            <option value="@role.Name"></option>
        }
    </datalist>
    <table class="table mt-4">
        <thead>
            <tr>
                <th>Role Name</th>
                <th>Actions</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var role in Model.Roles.roles)
            {
                <tr id="role-@role.Id">
                    <td style="color:@(role.IsDefault? "red":"black"); font-weight:@(role.IsDefault? "bold":"") ">@role.Name
                    </td>

                    <td>
                        <a asp-page="./Create" asp-route-id="@role.Id" style="display:@Html.Raw(actions?.Any(a => a.ActionType == ActionType.Update) == true ? "inline" : "none");" class="btn btn-warning">Edit</a>

                        <a asp-page="View" asp-route-id="@role.Id" style="display:@Html.Raw(actions?.Any(a => a.ActionType == ActionType.View) == true ? "inline" : "none");" class="btn btn-info">View</a>

                        <form method="post"
                              style="display:@Html.Raw(actions?.Any(a => a.ActionType == ActionType.Delete) == true ? "inline" : "none");"
                            asp-page-handler="Delete" style="display:inline;">
                            <input type="hidden" name="roleId" value="@role.Id" />
                            <button type="submit" class="btn btn-danger"
                                onclick="return confirm('Are you sure you want to delete this role?');"
                                disabled="@role.IsDefault">
                                Delete
                            </button>
                        </form>
                        
                    </td>
                    @if (role.IsDefault)
                    {
                        <td>Default role</td>
                    }
                    else
                    {
                        <td></td>
                    }
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination -->
    @Html.Paginate(Model.Roles)
}
